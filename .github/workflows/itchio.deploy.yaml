name: Itch.io Deploy workflow

on:
  push:
    branches: ["main"]

env:
  GODOT_VERSION: "4.4.1"
  EXPORT_NAME: ${{ github.event.repository.name }}-${{ github.sha }}
  PROJECT_PATH: .

jobs:
  build-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          ls ~/.local/share/godot/export_templates/
          cd ${{ env.PROJECT_PATH }}
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  build-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd ${{ env.PROJECT_PATH }}
          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  build-mac:
    name: Mac Export
    continue-on-error: true
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd ${{ env.PROJECT_PATH }}
          godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: build/mac

  ####################
  ### PAGES  STAGE ###
  ####################

  build-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd ${{ env.PROJECT_PATH }}
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.

  ####################
  ### DEPLOY STAGE ###
  ####################

  deploy-windows:
    name: Windows deploy
    runs-on: ubuntu-latest
    needs: build-windows
    steps:
      - name: Retrieve artifact
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Deploy
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_IO_API_KEY }}
          CHANNEL: windows
          ITCH_USER: ${{ vars.ITCH_IO_USER }}
          ITCH_GAME: ${{ vars.ITCH_IO_GAME }}
          PACKAGE: build/windows

  deploy-linux:
    name: Linux deploy
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Retrieve artifact
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Deploy
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_IO_API_KEY }}
          CHANNEL: linux
          ITCH_USER: ${{ vars.ITCH_IO_USER }}
          ITCH_GAME: ${{ vars.ITCH_IO_GAME }}
          PACKAGE: build/linux

  deploy-mac:
    name: Mac deploy
    if: ${{ needs.build-mac.result == 'success' }}
    runs-on: ubuntu-latest
    needs: build-mac
    steps:
      - name: Retrieve artifact
        uses: actions/download-artifact@v4
        with:
          name: mac
          path: build/mac
      - name: Deploy
        uses: josephbmanley/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_IO_API_KEY }}
          CHANNEL: osx
          ITCH_USER: ${{ vars.ITCH_IO_USER }}
          ITCH_GAME: ${{ vars.ITCH_IO_GAME }}
          PACKAGE: build/mac
